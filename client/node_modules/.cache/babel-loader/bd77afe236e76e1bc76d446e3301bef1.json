{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jun\\\\Documents\\\\UTSC\\\\C09\\\\project-flex\\\\client\\\\src\\\\components\\\\Conversation.js\";\nimport React, { Component } from 'react';\nimport { send, getUserName } from '../HelperFunctions';\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Conversation, _Component);\n\n  function Conversation() {\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conversation).call(this)); // this.socket = io();\n\n    _this.state = {\n      newMessage: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.insertMessage = _this.insertMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //show bottom of message div\n      var messagesDiv = document.getElementsByClassName('conversation');\n\n      if (messagesDiv.length > 0) {\n        messagesDiv[0].scrollTop = messagesDiv[0].scrollHeight;\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"insertMessage\",\n    value: function insertMessage(event) {\n      event.preventDefault();\n      var data = {\n        recipient: this.props.userId,\n        message: this.state.newMessage,\n        sender: getUserName()\n      };\n      send(\"POST\", \"/api/messages\", data, function (err, res) {\n        if (err) console.log(err);else {\n          this.setState({\n            newMessage: \"\"\n          });\n          this.props.socket.emit(\"messagesUpdate\", data);\n        }\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var message = React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Select Contact\");\n      var userId = this.props.userId;\n\n      if (userId != \"\") {\n        var messages = this.props.messages.map(function (m, index) {\n          var direction = m.recipient === userId ? \"right\" : \"left\";\n          var currMessage = React.createElement(\"div\", {\n            key: index,\n            className: \"message \" + direction,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, m.message);\n          return currMessage;\n        }); //display the messages and an input to send a new message\n\n        message = React.createElement(\"div\", {\n          className: \"conversationContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"conversation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, messages), React.createElement(\"textarea\", {\n          className: \"textInputs\",\n          placeholder: \"Write a message\",\n          name: \"newMessage\",\n          rows: \"1\",\n          onChange: this.handleChange,\n          value: this.state.newMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn\",\n          value: \"Send\",\n          onClick: this.insertMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"conversations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, message);\n    }\n  }]);\n\n  return Conversation;\n}(Component);\n\nexport default Conversation;","map":{"version":3,"sources":["C:\\Users\\Jun\\Documents\\UTSC\\C09\\project-flex\\client\\src\\components\\Conversation.js"],"names":["React","Component","send","getUserName","Conversation","state","newMessage","handleChange","bind","insertMessage","messagesDiv","document","getElementsByClassName","length","scrollTop","scrollHeight","event","target","name","value","setState","preventDefault","data","recipient","props","userId","message","sender","err","res","console","log","socket","emit","messages","map","m","index","direction","currMessage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {send, getUserName} from '../HelperFunctions';\n\nclass Conversation extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\t// this.socket = io();\n\t\tthis.state = {\n\t\t\tnewMessage: \"\"\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.insertMessage = this.insertMessage.bind(this);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t//show bottom of message div\n\t\tlet messagesDiv = document.getElementsByClassName('conversation');\n\t\tif (messagesDiv.length > 0){\n\t\t\tmessagesDiv[0].scrollTop = messagesDiv[0].scrollHeight;\n\t\t}\n\t}\n\n\thandleChange(event){\n\t\tlet {name, value} = event.target;\n\t\tthis.setState({[name]: value});\n\t}\n\n\tinsertMessage(event){\n\t\tevent.preventDefault();\n\t\tlet data = {recipient: this.props.userId, message: this.state.newMessage, sender: getUserName()};\n\t\tsend(\"POST\", \"/api/messages\", data, function(err, res) {\n\t\t\tif(err) console.log(err);\n\t\t\telse{\n\t\t\t\tthis.setState({newMessage: \"\"});\n\t\t\t\tthis.props.socket.emit(\"messagesUpdate\", data);\n\t\t\t}\n\t\t}.bind(this));\n\t}\n\n\trender(){\n\t\tlet message = <h3>Select Contact</h3>;\n\t\tlet userId = this.props.userId;\n\t\tif (userId != \"\"){\n\t\t\tlet messages = this.props.messages.map(function(m, index){\n\t\t\t\tlet direction = m.recipient === userId ? \"right\" : \"left\";\n\t\t\t\tlet currMessage = (\n\t\t\t\t\t\t<div key={index} className={\"message \" + direction}>{m.message}</div>\n\t\t\t\t\t);\n\t\t\t\treturn currMessage;\n\t\t\t});\n\n\t\t\t//display the messages and an input to send a new message\n\t\t\tmessage = (\n\t\t\t\t\t<div className=\"conversationContainer\">\n\t\t\t\t\t\t<div className=\"conversation\">\n\t\t\t\t\t\t\t{messages}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<textarea className=\"textInputs\" placeholder=\"Write a message\" name=\"newMessage\" rows=\"1\" onChange={this.handleChange} value={this.state.newMessage}></textarea>\n\t\t\t\t\t\t<input type=\"submit\" className=\"btn\" value=\"Send\" onClick={this.insertMessage} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t\t\t<div className=\"conversations\">\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t);\n\t}\n}\n\nexport default Conversation;"]},"metadata":{},"sourceType":"module"}